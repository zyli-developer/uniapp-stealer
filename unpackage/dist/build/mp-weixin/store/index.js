"use strict";const e=require("../common/vendor.js"),t=e.createStore({state:{hasLogin:!1,isUniverifyLogin:!1,loginProvider:"",openid:null,testvuex:!1,colorIndex:0,colorList:["#FF0000","#00FF00","#0000FF"],noMatchLeftWindow:!0,active:"componentPage",leftWinActive:"/pages/component/view/view",activeOpen:"",menu:[],univerifyErrorMsg:""},mutations:{login(e,t){e.hasLogin=!0,e.loginProvider=t},logout(e){e.hasLogin=!1,e.openid=null},setOpenid(e,t){e.openid=t},setTestTrue(e){e.testvuex=!0},setTestFalse(e){e.testvuex=!1},setColorIndex(e,t){e.colorIndex=t},setMatchLeftWindow(e,t){e.noMatchLeftWindow=!t},setActive(e,t){e.active=t},setLeftWinActive(e,t){e.leftWinActive=t},setActiveOpen(e,t){e.activeOpen=t},setMenu(e,t){e.menu=t},setUniverifyLogin(e,t){"boolean"!=typeof t&&(t=!!t),e.isUniverifyLogin=t},setUniverifyErrorMsg(e,t=""){e.univerifyErrorMsg=t},setSystemInfo(e,t){e.system=t}},getters:{currentColor:e=>e.colorList[e.colorIndex]},actions:{getSystemInfoSync:async({commit:t,state:o})=>{console.log("12");try{const o=await e.wx$1.getSystemInfoSync();console.log(o),t("setSystemInfo",o)}catch(n){console.log("e",n)}},getUserOpenId:async function({commit:t,state:o}){return await new Promise(((n,i)=>{o.openid?n(o.openid):e.index.login({success:e=>{t("login"),setTimeout((function(){const e="123456789";console.log("uni.request mock openid[123456789]"),t("setOpenid",e),n(e)}),1e3)},fail:e=>{console.log("uni.login 接口调用失败，将无法正常使用开放接口等服务",e),i(e)}})}))},getPhoneNumber:function({commit:t},o){return new Promise(((t,n)=>{e.index.request({url:"https://97fca9f2-41f6-449f-a35e-3f135d4c3875.bspapp.com/http/univerify-login",method:"POST",data:o,success:e=>{const o=e.data;o.success?t(o.phoneNumber):n(e)},fail:e=>{n(res)}})}))}}});exports.store=t;
