"use strict";const r=require("../common/vendor.js"),c=r.createStore({state:{hasLogin:!1,isUniverifyLogin:!1,loginProvider:"",openid:null,testvuex:!1,colorIndex:0,colorList:["#FF0000","#00FF00","#0000FF"],noMatchLeftWindow:!0,active:"componentPage",leftWinActive:"/pages/component/view/view",activeOpen:"",menu:[],univerifyErrorMsg:""},mutations:{login(e,n){e.hasLogin=!0,e.loginProvider=n},logout(e){e.hasLogin=!1,e.openid=null},setOpenid(e,n){e.openid=n},setTestTrue(e){e.testvuex=!0},setTestFalse(e){e.testvuex=!1},setColorIndex(e,n){e.colorIndex=n},setMatchLeftWindow(e,n){e.noMatchLeftWindow=!n},setActive(e,n){e.active=n},setLeftWinActive(e,n){e.leftWinActive=n},setActiveOpen(e,n){e.activeOpen=n},setMenu(e,n){e.menu=n},setUniverifyLogin(e,n){typeof n!="boolean"&&(n=!!n),e.isUniverifyLogin=n},setUniverifyErrorMsg(e,n=""){e.univerifyErrorMsg=n},setSystemInfo(e,n){e.system=n}},getters:{currentColor(e){return e.colorList[e.colorIndex]}},actions:{getSystemInfoSync:async({commit:e,state:n})=>{console.log("12");try{const t=await r.wx$1.getSystemInfoSync();console.log(t),e("setSystemInfo",t)}catch(t){console.log("e",t)}},getUserOpenId:async function({commit:e,state:n}){return await new Promise((t,s)=>{n.openid?t(n.openid):r.index.login({success:o=>{e("login"),setTimeout(function(){const i="123456789";console.log("uni.request mock openid["+i+"]"),e("setOpenid",i),t(i)},1e3)},fail:o=>{console.log("uni.login 接口调用失败，将无法正常使用开放接口等服务",o),s(o)}})})},getPhoneNumber:function({commit:e},n){return new Promise((t,s)=>{r.index.request({url:"https://97fca9f2-41f6-449f-a35e-3f135d4c3875.bspapp.com/http/univerify-login",method:"POST",data:n,success:o=>{const i=o.data;i.success?t(i.phoneNumber):s(o)},fail:o=>{s(res)}})})}}});exports.store=c;
